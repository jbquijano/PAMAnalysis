---
title: "Fv/Fm dose response curves"
format: html
theme: 
  light: zephyr
  dark: cyborg
toc: true
page-layout: full
number-sections: true
number-depth: 3
editor: visual
self-contained: true
---

# Import packages

Import useful packages.

```{r}
pacman::p_load(tidyverse,
               readxl, # Importing .xslx and other Excel-related data
               lubridate, # Tidy-managing date data 
               Rmisc, # Additional data analysis functions 
               drc, # Dose-response curve package
               janitor) # Additional tibble cleaner 
```

# Import data

As you've seen, I imported `tidyverse`. I love tidyverse, if you don't, it's fine, but you might not appreciate this documentation.

```{r}
path <- 'pam-reconciled_2023-2024.xlsx'
data <- 
  path |> 
  excel_sheets() |> 
  set_names() |> 
  map(read_excel, path = path)
```

You might have noticed that the sheets are pooled into a list of dataframes. Separate them.

```{r}
iwalk(
  .x = data,
  .f = function(x, y) {
    x <- as.data.frame(x)
    y <- paste0('data_', y)
    assign(y, x, envir = globalenv())
    })
```

I don't like my dataframe names, I hope you don't as well. Rename and remove old names. Why does this happen? Welp, it just extracted sheet name in your Excel file. Next time, name wisely to analyse quickly (i.e., variable names in R should not contain '-').

```{r}
# For Amil
amil_meta <- data_Amil
amil_data <- `data_Amil-PAM`
rm(data_Amil, `data_Amil-PAM`)

# For Aten
aten_meta <- data_Aten
aten_data <- `data_Aten-PAM`
rm(data_Aten, `data_Aten-PAM`)
```

# Explore CBASS' way

Before playing around with ACIAR's data, I first explored CBASS' way. I documented it here.

## Import data

Step 1.

```{r}
Full_PAM <- read.delim("Gradient_Full_PAM.txt")
Full_PAM$Sample<-as.factor(Full_PAM$Sample)
Full_PAM$Site<-as.factor(Full_PAM$Site)
Full_PAM$Species<-as.factor(Full_PAM$Species)
Full_PAM$SiteSpecies<-as.factor(Full_PAM$SiteSpecies)
Full_PAM$Geno<-as.factor(Full_PAM$Geno)
Full_PAM$Replicate<-as.factor(Full_PAM$Replicate)

str(Full_PAM)
```

Step 2.

```{r}
#order sites North to South
levels(Full_PAM$Site)
Full_PAM$Site = factor(Full_PAM$Site,levels(Full_PAM$Site)[c(4,3,6,1,2,5)]) 
# correct N to S order is: "Eilat"  "AlWajh"  "Yanbu"  "AlFahal"  "AlQunfudhah"  "Obock"   

Acr_data<-subset(Full_PAM, Species == 'Acropora')
Poc_data<-subset(Full_PAM, Species == 'Pocillopora')
Por_data<-subset(Full_PAM, Species == 'Porites')
Sty_data<-subset(Full_PAM, Species == 'Stylophora')
```

Step 3.

```{r}
Sty_Eilat_pop <- drm(FvFm ~ Temp, data = Sty_data[Sty_data$Site=="Eilat",], fct = LL.3())
summary(Sty_Eilat_pop)
plot(Sty_Eilat_pop)
```

Step 4.

```{r}
#Run individual genotype fits
Sty_Eilat <- drm(FvFm ~ Temp, data = Sty_data[Sty_data$Site=="Eilat",], curveid=Geno, fct = LL.3())
summary(Sty_Eilat)
plot(Sty_Eilat)
```

Step 5.

```{r}
#extract coeffs by geno, then compute 95% CIs
Sty_Eilat_genocoeffs_50<-data.frame(ED(Sty_Eilat, c(50)))
Sty_Eilat_coeff_mean<-mean(Sty_Eilat_genocoeffs_50$Estimate)
Sty_Eilat_coeff_mean

Sty_Eilat_summary<-data.frame(CI(Sty_Eilat_genocoeffs_50$Estimate, ci=0.95))
Sty_Eilat_coeff_lower<-Sty_Eilat_summary[3,]
Sty_Eilat_coeff_upper<-Sty_Eilat_summary[1,]
```

# Amil

## Shape data

Shape data to be like CBASS' way.

```{r}
amil_data_drc <- 
  amil_data |> 
  mutate(date_start = ymd(20231130),
         Date = ymd(Date)) |>
  mutate(days_exposure = Date - date_start,
         treatment = case_when(`Tank ID` %in% c("C", "G") ~ '29',
                               .default = '33')) |> 
  filter(treatment != '29') |> 
  mutate(days_exposure = as.numeric(days_exposure)) |> 
  mutate(days_exposure = case_when(days_exposure == -3 ~ 0,
                                   .default = days_exposure)) |> 
  filter(days_exposure != -3) |> 
  dplyr::rename(FvFm = `Fv/Fm=Y`) |> 
  mutate(days_exposure = as.numeric(days_exposure)) |> 
  dplyr::select(!c(1:2,5:8,10:12)) |> 
  as_tibble() |> 
  mutate(helper = paste0(`Fragment ID`, '_', days_exposure)) |> 
  mutate(`Fv/Fm=Y` = case_when(helper == '06ME_7' ~ 0, # Remove erroneous data point
                               .default = FvFm)) |> 
  dplyr::select(!c(2,6)) |> 
  as.data.frame()

amil_data_drc$Colony<-as.factor(amil_data_drc$Colony)
```

Run individual genotype fits.

```{r}
amil_data_drc_1 <- drm(FvFm*100 ~ days_exposure, 
                       data = amil_data_drc |> filter(Colony == 12), 
                       fct = LL.3())

plot(amil_data_drc_1)

plot(amil_data_drc_1)
```
